http://speakerdeck.com/u/jeg2/p/10-things-you-didnt-know-rails-could-do
http://vdisk.weibo.com/s/4DlBm


require files
%w(action_controller/railtie coderay).each &method(:require)


rake notes             # Enumerate all annotations (use notes:optimize, :fixme, :todo for focus)
rake notes:custom      # Enumerate a custom annotation, specify with ANNOTATION=CUSTOM


Sandbox Your Console
rails c --sandbox
    -s, --sandbox                    Rollback database modifications on exit.


Run Helper Methods in the Console
helper.number_to_currency(100)


Use Non-WEBrick Servers in Development
group :development do
  gem "thin"
end
rails s thin

$ rails s --help
Usage: rails server [mongrel, thin, etc] [options]


File.atomic_write


Merge Nested Hashes
>> {nested: {one: 1}}.merge(nested: {two: 2})
=> {:nested=>{:two=>2}}
>> {nested: {one: 1}}.deep_merge(nested: {two: 2})
=> {:nested=>{:one=>1, :two=>2}}


Remove Specific Keys From a Hash
>> params = {controller: "home", action: "index", from: "Google"}
=> {:controller=>"home", :action=>"index", :from=>"Google"}
>> params.except(:controller, :action)
=> {:from=>"Google"}


Answer Questions About Strings
>> "magic".inquiry.magic?
=> true
or
>> ActiveSupport::StringInquirer.new("magic").magic?
=> true

Best Practice
class Article < ActiveRecord::Base
  # ...

  STATUSES = %w[Draft Published]
  validates_inclusion_of :status, in: STATUSES

  def method_missing(method, *args, &block)
    if method =~ /\A#{STATUSES.map(&:downcase).join("|")}\?\z/
      status.downcase.inquiry.send(method)
    else
      super
    end
  end

end


Generate Multiple Tags at Once
<% @articles.each do |article| %>
  <%= content_tag_for(:div, article) do %>
    <h2><%= article.subject %></h2>
  <% end %>
<% end %>

<%= content_tag_for(:div, @articles) do |article| %>
  <h2><%= article.subject %></h2>
<% end %>